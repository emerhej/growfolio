{"version":3,"sources":["app.js","debug.js","environment.js","main.js","performance-table.js","portfolio.js","transaction-table.js","web-api.js","resources/index.js","services/api.js","services/holding-service.js","value-converters/object-keys-value-converter.js","value-converters/object-values-value-converter.js","value-converters/percent.js","resources/elements/loading-indicator.js","colored-number.js","value-converters/capitalize.js"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","Debug","bindingContext","updateJson","json","undefined","JSON","stringify","bind","interval","setInterval","unbind","clearInterval","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","REFRESH_INTERVAL","UP","DOWN","PerformanceTable","holdingService","init","holdings","refresh","numberColor","number","TRSC","PERF","Portfolio","name","currentTable","tables","selectTable","table","TransactionTable","created","getTransactionList","transactions","latency","id","getId","symbol","price","type","shares","commission","date","Date","WebAPI","isRequesting","_sendArray","getHoldingList","data","setTimeout","resolve","slice","getHoldingDetails","found","filter","x","parse","saveHolding","holding","instance","index","indexOf","push","globalResources","client","queryParams","params","esc","encodeURIComponent","Object","keys","k","join","makeUrl","url","API","getQuotes","symbols","symbolsStr","q","format","diagnostics","env","callback","fetch","response","result","query","results","quote","Array","isArray","HoldingService","realAPI","_loadTransactionsToHolding","_loadQuotes","_calculate","forEach","trsc","find","sellTransactions","buyTransactions","cost","console","log","quotes","_calcHoldingCost","mkt_value","LastTradePriceOnly","gain","gain_percent","days_gain","Change","soldShares","reduce","acc","cur","leftShares","ObjectKeysValueConverter","toView","obj","temp","prop","hasOwnProperty","ObjectValuesValueConverter","PercentValueConverter","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done","ColoredNumber","color","CapitalizeValueConverter","string","charAt","toUpperCase"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {WebAPI} from './web-api';\n\nexport class App {\n  static inject() { return [WebAPI]; }\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  configureRouter(config, router){\n    config.title = 'Growfolio';\n    config.map([\n      { route: '',              moduleId: 'portfolio',   title: 'Portfolio'},\n      // { route: 'contacts/:id',  moduleId: 'contact-detail', name:'contacts' }\n    ]);\n\n    this.router = router;\n  }\n}","export class Debug {\n  bindingContext = null;\n\n  updateJson() {\n    if (this.bindingContext === null) {\n      this.json = 'null';\n    } else if (this.bindingContext === undefined) {\n      this.json = 'undefined'\n    } else {\n      // todo: use a stringify function that can handle circular references.\n      this.json = JSON.stringify(this.bindingContext, null, 2);\n    }\n  }\n\n  bind(bindingContext) {\n    this.bindingContext = bindingContext;\n    this.updateJson();\n    this.interval = setInterval(this.updateJson, 150);\n  }\n\n  unbind() {\n    this.bindingContext = null;\n    clearInterval(this.interval);\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-table')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HoldingService} from './services/holding-service';\n\nconst REFRESH_INTERVAL = 10000;\nconst UP = \"up\";\nconst DOWN = \"down\";\n\nexport class PerformanceTable {\n    static inject = [HoldingService];\n\n    constructor(holdingService) {\n        this.holdingService = holdingService;\n        this.holdingService.init().then(() => {\n            this.holdings = this.holdingService.holdings;\n        });\n        setInterval(() => this.holdingService.refresh(), REFRESH_INTERVAL);\n\n    }\n    numberColor(number) {\n        if (number > 0) {\n            return UP;\n        }\n        if (number < 0) {\n            return DOWN;\n        }\n        return '';\n    }\n}","import {WebAPI} from './web-api';\n\nconst TRSC = \"transactions\";\nconst PERF = \"performance\";\n\nexport class Portfolio {\n    static inject = [WebAPI];\n\n    constructor(api) {\n        this.api = api;\n        this.name = \"Portfolio1\";\n        this.currentTable = PERF;\n        this.tables = [PERF, TRSC];\n    }\n\n    selectTable(table) {\n        this.currentTable = table;\n    }\n}","import {WebAPI} from './web-api';\n\nexport class TransactionTable {\n    static inject = [WebAPI];\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    created() {\n        this.api.getTransactionList()\n        .then(transactions => this.transactions = transactions);\n    }\n}","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet holdings = [\n  {\n    id: getId(),\n    symbol: 'YHOO',\n    price: 123\n  }\n];\n\nlet transactions = [\n  {\n    id: getId(),\n    symbol: 'YHOO',\n    type: 'buy',\n    shares: 1000,\n    price: 40.00,\n    commission: 50.00,\n    date: new Date(2016, 11, 7)\n  },\n  {\n    id: getId(),\n    symbol: 'YHOO',\n    type: 'buy',\n    shares: 1000,\n    price: 40.10,\n    commission: 30.00,\n    date: new Date(2016, 11, 8)\n  },\n  {\n    id: getId(),\n    symbol: 'YHOO',\n    type: 'sell',\n    shares: 1500,\n    price: 41.20,\n    commission: 0.00,\n    date: new Date(2016, 11, 15)\n  }\n]\n\nexport class WebAPI {\n  isRequesting = false;\n\n  getTransactionList() {\n    return this._sendArray(transactions);\n  }\n\n  getHoldingList(){\n    return this._sendArray(holdings);\n  }\n\n  _sendArray(data) {\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // return a clone of data\n        resolve(data.slice(0));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getHoldingDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = holdings.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveHolding(holding){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(holding));\n        let found = holdings.filter(x => x.id == holding.id)[0];\n\n        if(found){\n          let index = holdings.indexOf(found);\n          holdings[index] = instance;\n        }else{\n          instance.id = getId();\n          holdings.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n    config.globalResources(['./elements/loading-indicator']);\n}\n","// polyfills\nimport 'whatwg-fetch';\nimport {HttpClient} from 'aurelia-fetch-client';\n\nlet client = new HttpClient();\n\nfunction queryParams(params) {\n    let esc = encodeURIComponent;\n    return Object.keys(params)\n        .map(k => esc(k) + '=' + esc(params[k]))\n        .join('&');\n\n}\n\nfunction makeUrl(url, params) {\n    return url += (url.indexOf('?') === -1 ? '?' : '&') + queryParams(params);\n}\n\nexport class API {\n    constructor() {\n        this.client = client;\n    }\n\n    getQuotes(symbols) {\n        // concat symbols into \\\"YAHOO\\\",\\\"GOOGL\\\",\\\"AMZN\\\"\n        let symbolsStr = symbols.map((symbol) => '\\\"' + symbol + '\\\"').join(',')\n\n        let url = 'https://query.yahooapis.com/v1/public/yql';\n        let params = {\n          q: `select * from yahoo.finance.quotes where symbol in (${symbolsStr})`,\n          format:'json',\n          diagnostics: 'true',\n          env: 'store://datatables.org/alltableswithkeys',\n          callback: ''\n        }\n        return this.client.fetch(makeUrl(url, params))\n            .then(response => response.json())\n            .then(data => {\n                let result = data.query.results.quote;\n                //always return an Array.\n                return Array.isArray(result) ? result : [result];\n            })\n    }\n}","import {WebAPI} from '../web-api';\nimport {API} from './api';\n\nexport class HoldingService {\n    static inject = [WebAPI, API];\n\n    constructor(api, realAPI) {\n        this.api = api;\n        this.realAPI = realAPI;\n        this.holdings = [];\n    }\n\n    init() {\n        this.holdings = [];\n        return this._loadTransactionsToHolding().then(() => {\n            return this._loadQuotes();\n        }).then(() => {\n            this._calculate(this.holdings);\n        });\n    }\n\n    refresh() {\n        this._loadQuotes().then(() => this._calculate(this.holdings));\n    }\n\n    _loadTransactionsToHolding() {\n        // make it short\n        let map = this.holdings;\n        return this.api.getTransactionList().then((transactions) => {\n            //TODO sort by date\n            transactions.forEach((trsc) => {\n                let holding = map.find(x => x.symbol === trsc.symbol);\n                if (!holding) {\n                    holding = {\n                        symbol: trsc.symbol,\n                        sellTransactions: [],\n                        buyTransactions: [],\n                        cost: 0\n                    };\n                    map.push(holding);\n                }\n                if (trsc.type === 'buy') {\n                    holding.buyTransactions.push(trsc)\n                } else {\n                    holding.sellTransactions.push(trsc);\n                }\n            });\n        });\n    }\n\n    _loadQuotes() {\n        let symbols = this.holdings.map(x => x.symbol);\n        // save quote into each symbol holding\n        return this.realAPI.getQuotes(symbols).then(quotes => {\n            console.log(\"quotes is\", quotes);\n            quotes.forEach(quote => {\n                let holding = this.holdings.find(x => x.symbol === quote.symbol);\n                holding.quote = quote;\n            })\n        });\n    }\n\n    _calculate(holdings) {\n        holdings.forEach((holding) => {\n            this._calcHoldingCost(holding);\n            holding.mkt_value = holding.shares * holding.quote.LastTradePriceOnly;\n            holding.gain = holding.mkt_value - holding.cost;\n            holding.gain_percent = holding.gain / holding.cost;\n            holding.days_gain = holding.shares * holding.quote.Change;\n        });\n    }\n\n    /*\n     * Calculate the cost for each symbol based on transcations.\n     * Add keys: shares, cost.\n     * @param holdings: Holdings array\n     */\n    _calcHoldingCost(holding) {\n        let soldShares = holding.sellTransactions.reduce((acc, cur) => {\n            return acc + cur.shares;\n        }, 0);\n        holding.cost = 0;\n        holding.shares = 0;\n\n        // minus sold shares from each buy transaction until sold shares\n        // is empty. Calculate the buy cost based on left over shares on\n        // each transaction.\n        holding.buyTransactions.forEach((trsc) => {\n            let leftShares, cost;\n\n            if (trsc.shares < soldShares) {\n                leftShares = 0;\n                soldShares -= trsc.shares;\n            } else {\n                leftShares = trsc.shares - soldShares;\n                soldShares = 0;\n            }\n            holding.cost += (leftShares / trsc.shares) *\n                (trsc.shares * trsc.price + trsc.commission);\n            holding.shares += leftShares;\n        }, 0);\n    };\n}","// A ValueConverter for iterating an Object's properties inside of a repeat.for in Aurelia\nexport class ObjectKeysValueConverter {\n    toView(obj) {\n        // Create a temporary array to populate with object keys\n        let temp = [];\n\n        // A basic for..in loop to get object properties\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...in\n        for (let prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                temp.push(prop);\n            }\n        }\n        debugger;\n        return temp;\n    }\n}\n\n/**\n * Usage\n * Shows how to use the custom ValueConverter to iterate an objects properties\n * aka its keys.\n * \n * <require from=\"ObjectKeys\"></require>\n * <li repeat.for=\"prop of myVmObject | objectKeys\">${prop}</li>\n */","// A ValueConverter for iterating an Object's values inside of a repeat.for in Aurelia\nexport class ObjectValuesValueConverter {\n    toView(obj) {\n        // Create a temporary array to populate with object values\n        let temp = [];\n\n        // A basic for..in loop to get values\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of\n        for (let prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                temp.push(obj[prop]);\n            }\n        }\n        debugger;\n        return temp;\n    }\n}\n\n/**\n * Usage\n * Shows how to use the custom ValueConverter to iterate an objects values\n *\n * <require from=\"./ObjectValuesValueConverter\"></require>\n * <li repeat.for=\"val of myVmObject | objectValues\">${val}</li>\n */\n","import numeral from 'numeral';\n\n// A ValueConverter to show 2 digit percentage\nexport class PercentValueConverter {\n    toView(number) {\n        return numeral(number).format('0.00%');\n    }\n}","import * as nprogress from 'nprogress';\nimport {bindable, noView, decorators} from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name: 'loading', defaultValue: false})\n).on(class {\n  loadingChanged(newValue){\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n});","import {bindable} from 'aurelia-framework';\n\nconst UP = \"up\";\nconst DOWN = \"down\";\n\nexport class ColoredNumber {\n    @bindable number;\n\n    color(number) {\n        if (number > 0) {\n            return UP;\n        }\n        if (number < 0) {\n            return DOWN;\n        }\n        return '';\n    }\n}","export class CapitalizeValueConverter {\n    toView(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}"],"sourceRoot":"../src"}